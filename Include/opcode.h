/* Auto-generated by Tools/scripts/generate_opcode_h.py from Lib/opcode.py */
#ifndef Py_OPCODE_H
#define Py_OPCODE_H
#ifdef __cplusplus
extern "C" {
#endif


    /* Instruction opcodes for compiled code */
#define POP_TOP                   1
#define ROT_TWO                   2
#define ROT_THREE                 3
#define DUP_TOP                   4
#define DUP_TOP_TWO               5
#define ROT_FOUR                  6
#define NOP                       9
#define UNARY_POSITIVE           10
#define UNARY_NEGATIVE           11
#define UNARY_NOT                12
#define UNARY_INVERT             15
#define BINARY_MATRIX_MULTIPLY   16
#define INPLACE_MATRIX_MULTIPLY  17
#define BINARY_POWER             19
#define BINARY_MULTIPLY          20
#define BINARY_MODULO            22
#define BINARY_ADD               23
#define BINARY_SUBTRACT          24
#define BINARY_SUBSCR            25
#define BINARY_FLOOR_DIVIDE      26
#define BINARY_TRUE_DIVIDE       27
#define INPLACE_FLOOR_DIVIDE     28
#define INPLACE_TRUE_DIVIDE      29
#define RERAISE                  48
#define WITH_EXCEPT_START        49
#define GET_AITER                50
#define GET_ANEXT                51
#define BEFORE_ASYNC_WITH        52
#define END_ASYNC_FOR            54
#define INPLACE_ADD              55
#define INPLACE_SUBTRACT         56
#define INPLACE_MULTIPLY         57
#define INPLACE_MODULO           59
#define STORE_SUBSCR             60
#define DELETE_SUBSCR            61
#define BINARY_LSHIFT            62
#define BINARY_RSHIFT            63
#define BINARY_AND               64
#define BINARY_XOR               65
#define BINARY_OR                66
#define INPLACE_POWER            67
#define GET_ITER                 68
#define GET_YIELD_FROM_ITER      69
#define PRINT_EXPR               70
#define LOAD_BUILD_CLASS         71
#define YIELD_FROM               72
#define GET_AWAITABLE            73
#define LOAD_ASSERTION_ERROR     74
#define INPLACE_LSHIFT           75
#define INPLACE_RSHIFT           76
#define INPLACE_AND              77
#define INPLACE_XOR              78
#define INPLACE_OR               79
#define LIST_TO_TUPLE            82
#define RETURN_VALUE             83
#define IMPORT_STAR              84
#define SETUP_ANNOTATIONS        85
#define YIELD_VALUE              86
#define POP_BLOCK                87
#define POP_EXCEPT               89
#define HAVE_ARGUMENT            91
#define BINARY_PIPED_CALL        90
#define STORE_NAME               91
#define DELETE_NAME              92
#define UNPACK_SEQUENCE          93
#define FOR_ITER                 94
#define UNPACK_EX                95
#define STORE_ATTR               96
#define DELETE_ATTR              97
#define STORE_GLOBAL             98
#define DELETE_GLOBAL            99
#define LOAD_CONST              101
#define LOAD_NAME               102
#define BUILD_TUPLE             103
#define BUILD_LIST              104
#define BUILD_SET               105
#define BUILD_MAP               106
#define LOAD_ATTR               107
#define COMPARE_OP              108
#define IMPORT_NAME             109
#define IMPORT_FROM             110
#define JUMP_FORWARD            111
#define JUMP_IF_FALSE_OR_POP    112
#define JUMP_IF_TRUE_OR_POP     113
#define JUMP_ABSOLUTE           114
#define POP_JUMP_IF_FALSE       115
#define POP_JUMP_IF_TRUE        116
#define LOAD_GLOBAL             117
#define IS_OP                   118
#define CONTAINS_OP             119
#define JUMP_IF_NOT_EXC_MATCH   122
#define SETUP_FINALLY           123
#define LOAD_FAST               125
#define STORE_FAST              126
#define DELETE_FAST             127
#define RAISE_VARARGS           131
#define CALL_FUNCTION           132
#define MAKE_FUNCTION           133
#define BUILD_SLICE             134
#define LOAD_CLOSURE            136
#define LOAD_DEREF              137
#define STORE_DEREF             138
#define DELETE_DEREF            139
#define CALL_FUNCTION_KW        142
#define CALL_FUNCTION_EX        143
#define SETUP_WITH              144
#define EXTENDED_ARG            145
#define LIST_APPEND             146
#define SET_ADD                 147
#define MAP_ADD                 148
#define LOAD_CLASSDEREF         149
#define SETUP_ASYNC_WITH        155
#define FORMAT_VALUE            156
#define BUILD_CONST_KEY_MAP     157
#define BUILD_STRING            158
#define LOAD_METHOD             161
#define CALL_METHOD             162
#define LIST_EXTEND             163
#define SET_UPDATE              164
#define DICT_MERGE              165
#define DICT_UPDATE             166

/* EXCEPT_HANDLER is a special, implicit block type which is created when
   entering an except handler. It is not an opcode but we define it here
   as we want it to be available to both frameobject.c and ceval.c, while
   remaining private.*/
#define EXCEPT_HANDLER 257

#define HAS_ARG(op) ((op) >= HAVE_ARGUMENT)

#ifdef __cplusplus
}
#endif
#endif /* !Py_OPCODE_H */
